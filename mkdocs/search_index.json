{
    "docs": [
        {
            "location": "/", 
            "text": "leti-R Wiki page\n\n\nThis wiki is an attempt at structuring our research efforts in as structure-free an environment as possible!\n\n\nWho are we?\n\n\n\n\nWhere are we?\n\n\n\n\n \n\n\n\nMkDocs\n\n\nThe goal was to find an easy tool that can be customized and can work with markdown documents. \nMkDocs\n provides these features. MkDocs works quite simply by using a .yaml file for configuration, and a folder of .md files to create pages for the wiki. It's  highly customizable and seems like a good candidate to address our needs. I also have not gone through the whole documentation or their \ngithub repository\n, so it may be that what I have found unsatisfying thus far has already been addressed.\n\n\nInstallation\n\n\nFor \nhomebrew\n users:\n\n\nbrew install mkdocs\n\n\n\n\nFor further details, you may visit the \nMkDocs\n website.\n\n\n\n\nTagging in documents\n\n\nThe search function provided by MkDocs does not allow for strict searches (\ne.g.\n \"ggplot2\"). I therefore suggest adding a tags section for each document to facilitate indexation and search through the wiki, with all tags preceded by '_' (# doesn't work). It would give something like this:\n\n\nTags\n\n\n_K\u00e9vin;\n_Steve;\n_Nicolas\n\n\n\n\nUseful commands\n\n\nLocal visualization\n\n\nUse the following command to visualize the wiki locally at the following address in your web browser: http://127.0.0.1:8000\n\n\nmkdocs serve\n\n\n\n\nDeploying online\n\n\nUse the following command to push modifications to gh-pages branch after modifications to the wiki have been markdown-cheatsheet\n\n\nmkdocs gh-deploy --clean\n\n\n\n\nAdding css files / javascript library\n\n\nTo add \n.css\n and  \n.js\n files, follow the steps described \nhere\n. Once done,\nyou will need to rebuild to website:\n\n\nmkdocs build --clean\n\n\n\n\n\n\n\n\n\nUseful links for MkDocs\n\n\nMkDocs\n - Overview and installation\n\n\nsitepoint\n - Building and deploying product documentation with MkDocs\n\n\nEmbedded Log\n- Automatic update of MkDocs from github wiki with python script\n\n\n\n\nUseful links for Markdown\n\n\n\n\n\nMarkdown cheat sheet\n\n\nK\u00e9vin Cazelle's \nrepository\n on R markdown in french.", 
            "title": "Home"
        }, 
        {
            "location": "/#leti-r-wiki-page", 
            "text": "This wiki is an attempt at structuring our research efforts in as structure-free an environment as possible!", 
            "title": "leti-R Wiki page"
        }, 
        {
            "location": "/#who-are-we", 
            "text": "", 
            "title": "Who are we?"
        }, 
        {
            "location": "/#where-are-we", 
            "text": "", 
            "title": "Where are we?"
        }, 
        {
            "location": "/#mkdocs", 
            "text": "The goal was to find an easy tool that can be customized and can work with markdown documents.  MkDocs  provides these features. MkDocs works quite simply by using a .yaml file for configuration, and a folder of .md files to create pages for the wiki. It's  highly customizable and seems like a good candidate to address our needs. I also have not gone through the whole documentation or their  github repository , so it may be that what I have found unsatisfying thus far has already been addressed.", 
            "title": "MkDocs"
        }, 
        {
            "location": "/#installation", 
            "text": "For  homebrew  users:  brew install mkdocs  For further details, you may visit the  MkDocs  website.", 
            "title": "Installation"
        }, 
        {
            "location": "/#tagging-in-documents", 
            "text": "The search function provided by MkDocs does not allow for strict searches ( e.g.  \"ggplot2\"). I therefore suggest adding a tags section for each document to facilitate indexation and search through the wiki, with all tags preceded by '_' (# doesn't work). It would give something like this:", 
            "title": "Tagging in documents"
        }, 
        {
            "location": "/#tags", 
            "text": "_K\u00e9vin;\n_Steve;\n_Nicolas", 
            "title": "Tags"
        }, 
        {
            "location": "/#useful-commands", 
            "text": "", 
            "title": "Useful commands"
        }, 
        {
            "location": "/#local-visualization", 
            "text": "Use the following command to visualize the wiki locally at the following address in your web browser: http://127.0.0.1:8000  mkdocs serve", 
            "title": "Local visualization"
        }, 
        {
            "location": "/#deploying-online", 
            "text": "Use the following command to push modifications to gh-pages branch after modifications to the wiki have been markdown-cheatsheet  mkdocs gh-deploy --clean", 
            "title": "Deploying online"
        }, 
        {
            "location": "/#adding-css-files-javascript-library", 
            "text": "To add  .css  and   .js  files, follow the steps described  here . Once done,\nyou will need to rebuild to website:  mkdocs build --clean", 
            "title": "Adding css files / javascript library"
        }, 
        {
            "location": "/#useful-links-for-mkdocs", 
            "text": "MkDocs  - Overview and installation  sitepoint  - Building and deploying product documentation with MkDocs  Embedded Log - Automatic update of MkDocs from github wiki with python script", 
            "title": "Useful links for MkDocs"
        }, 
        {
            "location": "/#useful-links-for-markdown", 
            "text": "Markdown cheat sheet  K\u00e9vin Cazelle's  repository  on R markdown in french.", 
            "title": "Useful links for Markdown"
        }, 
        {
            "location": "/Rnotes/", 
            "text": "R notes\n\n\nThis is a page where some helpful R resources are indexed.\nIt is a actually a selection of blogposts mainly found via the R-bloggers (a blog hub) mailing list.", 
            "title": "Useful blog posts"
        }, 
        {
            "location": "/Rnotes/#r-notes", 
            "text": "This is a page where some helpful R resources are indexed.\nIt is a actually a selection of blogposts mainly found via the R-bloggers (a blog hub) mailing list.", 
            "title": "R notes"
        }, 
        {
            "location": "/Rgraphpkgs/", 
            "text": "R packages to create and edit plots\n\n\nWhy use R to produce graphics?\n\n\nS, R's ancestor, was first designed to be an interactive interface for calling routines from the SCS (Statistical Computing Subroutines) FORTRAN library. It expanded to be a complete programming language dedicated to data manipulation, statistical analysis and data visualization (see \nA brief History of S\n). Today's graphical system of R is directly derived from the one of S. When R is installed, you get from it two base packages, \n'graphics'\n and \n'grid'\n, which produce graphics that are exported with the \ngrDevices\n package. These packages are very complete and flexible. They allow users to efficiently create graphics that scientists use in their day to day operations, \ni.e.\n scatterplots, box plots, histograms, etc. We consider that the 'graphics' package is somewhat more user-friendly than the trickier 'grid' package which offers better facilities to develop new graphical functions (e.g. grid' has been employed to build \nggplot2\n). Recently, the \ngridGraphics\n package has been developed to bridge the gap between 'grid' and 'graphics' packages.\n\n\nThat being said, the advantages are numerous and more can be built in. For instance:\n\n\n\n\n\n\nYou get all the advantages linked with using R, \ni.e.\n it is free, lot of documentation exists, a very large community of users, there are many packages, it is easy to learn.\n\n\n\n\n\n\nAny kind of graphics a scientist needs has already been implemented by many contributors (see the packages review below). If you find there is room for improvement or that we are mistaken, all information is available to further develop missing plotting functions or correct existing ones.\n\n\n\n\n\n\nAlmost everything is possible. All graphics are fully customizable. Some time is required to learn the works, but it's worth it.\n\n\n\n\n\n\nAlthough there may be many good reasons to use software to post-treat graphics R produces in WYSIWYG softwares, we contend that once you master R, you will never do so. When a graphics is done, it is associated with only a few lines of code. Changing solely the lines of code is a much more efficient way more efficient to solve any problem than reproducing and post-treating the graphics. As scientists, it is a victory to only modify a few lines of code when reviewers quibble about a figure.\n\n\n\n\n\n\nOnce a graphics is created, we can export it in many formats: \n.eps\n, \n.jpeg\n, \n.pdf\n, \n.bmp\n, \n.svg\n with appropriate resolution and size. There is 100% guarantee that you will meet a journal's requirements for figures publication.\n\n\n\n\n\n\n\n\n\n\n\nDocumentation\n\n\nWe will make the content below 'evolving' by collecting and indexing as many sources of documentation as possible. Please comment in the Disqus section below to suggest and/or provide your own sources:\n\n\n\n\n\n\nComprehensive R Archive Network\n (\nCRAN\n)\n\n\n\n\nManuals\n\n\nContributed manuals and cheat sheets\n\n\n\n\n\n\n\n\nJournals\n\n\n\n\nR journal\n\n\nJournal of Statistical Software\n\n\n\n\n\n\n\n\nBooks\n:\n\n\n\n\nRgraphics, Second  Edition\n\n\nggplot2\n\n\nR Graphics Cookbook\n\n\n\n\n\n\n\n\nBlogs\n:\n\n\n\n\nR-bloggers\n\n\ninside-R\n\n\nQuick-R\n\n\nRevolutions\n\n\nR graph gallery\n\n\nA newer graph gallery\n\n\n\n\n\n\n\n\n\n\nList of packages\n\n\n\n\n\nMany packages for graphics are indexed in a dedicated \ntask view maintained by Nicholas Lewin-Koh\n. We have indexed many of them and refer to more below. For each package, we provide :\n\n\n\n\nthe name of the package with a link that goes to the \nCRAN\n repository where the manual and optional vignettes can be found,\n\n\na text summarizing the package content (an adequate part of the description found online),\n\n\n\n\nwhen available, we also provide :\n\n\n\n\n : a link that goes to the \nGithub\n repository,\n\n\n : a link that goes to the associated \nBitbucket\n repository,\n\n\n : a link that goes to a dedicated website or a html vignette that describes well the package,\n\n\n : a link that goes to a relevant publication,\n\n\n : a link that goes to an relevant pdf file (an R journal article for instance).", 
            "title": "R graph packages"
        }, 
        {
            "location": "/Rgraphpkgs/#r-packages-to-create-and-edit-plots", 
            "text": "", 
            "title": "R packages to create and edit plots"
        }, 
        {
            "location": "/Rgraphpkgs/#why-use-r-to-produce-graphics", 
            "text": "S, R's ancestor, was first designed to be an interactive interface for calling routines from the SCS (Statistical Computing Subroutines) FORTRAN library. It expanded to be a complete programming language dedicated to data manipulation, statistical analysis and data visualization (see  A brief History of S ). Today's graphical system of R is directly derived from the one of S. When R is installed, you get from it two base packages,  'graphics'  and  'grid' , which produce graphics that are exported with the  grDevices  package. These packages are very complete and flexible. They allow users to efficiently create graphics that scientists use in their day to day operations,  i.e.  scatterplots, box plots, histograms, etc. We consider that the 'graphics' package is somewhat more user-friendly than the trickier 'grid' package which offers better facilities to develop new graphical functions (e.g. grid' has been employed to build  ggplot2 ). Recently, the  gridGraphics  package has been developed to bridge the gap between 'grid' and 'graphics' packages.  That being said, the advantages are numerous and more can be built in. For instance:    You get all the advantages linked with using R,  i.e.  it is free, lot of documentation exists, a very large community of users, there are many packages, it is easy to learn.    Any kind of graphics a scientist needs has already been implemented by many contributors (see the packages review below). If you find there is room for improvement or that we are mistaken, all information is available to further develop missing plotting functions or correct existing ones.    Almost everything is possible. All graphics are fully customizable. Some time is required to learn the works, but it's worth it.    Although there may be many good reasons to use software to post-treat graphics R produces in WYSIWYG softwares, we contend that once you master R, you will never do so. When a graphics is done, it is associated with only a few lines of code. Changing solely the lines of code is a much more efficient way more efficient to solve any problem than reproducing and post-treating the graphics. As scientists, it is a victory to only modify a few lines of code when reviewers quibble about a figure.    Once a graphics is created, we can export it in many formats:  .eps ,  .jpeg ,  .pdf ,  .bmp ,  .svg  with appropriate resolution and size. There is 100% guarantee that you will meet a journal's requirements for figures publication.", 
            "title": "Why use R to produce graphics?"
        }, 
        {
            "location": "/Rgraphpkgs/#documentation", 
            "text": "We will make the content below 'evolving' by collecting and indexing as many sources of documentation as possible. Please comment in the Disqus section below to suggest and/or provide your own sources:    Comprehensive R Archive Network  ( CRAN )   Manuals  Contributed manuals and cheat sheets     Journals   R journal  Journal of Statistical Software     Books :   Rgraphics, Second  Edition  ggplot2  R Graphics Cookbook     Blogs :   R-bloggers  inside-R  Quick-R  Revolutions  R graph gallery  A newer graph gallery", 
            "title": "Documentation"
        }, 
        {
            "location": "/Rgraphpkgs/#list-of-packages", 
            "text": "Many packages for graphics are indexed in a dedicated  task view maintained by Nicholas Lewin-Koh . We have indexed many of them and refer to more below. For each package, we provide :   the name of the package with a link that goes to the  CRAN  repository where the manual and optional vignettes can be found,  a text summarizing the package content (an adequate part of the description found online),   when available, we also provide :    : a link that goes to the  Github  repository,   : a link that goes to the associated  Bitbucket  repository,   : a link that goes to a dedicated website or a html vignette that describes well the package,   : a link that goes to a relevant publication,   : a link that goes to an relevant pdf file (an R journal article for instance).", 
            "title": "List of packages"
        }
    ]
}